WML_treasury_funds_add = {
	custom_effect_tooltip = IRIS_Improving_the_economy_situation_tt
	if = {
		limit = {
			has_idea = WML_idea_currency_reserve_0
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_0
			add_idea = WML_idea_currency_reserve_1
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_1
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_1
			add_idea = WML_idea_currency_reserve_2
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_2
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_2
			add_idea = WML_idea_currency_reserve_3
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_3
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_3
			add_idea = WML_idea_currency_reserve_4
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_4
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_4
			add_idea = WML_idea_currency_reserve_5
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_5
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_5
			add_idea = WML_idea_currency_reserve_6
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_6
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_6
			add_idea = WML_idea_currency_reserve_7
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_7
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_7
			add_idea = WML_idea_currency_reserve_8
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_8
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_8
			add_idea = WML_idea_currency_reserve_9
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_9
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_9
			add_idea = WML_idea_currency_reserve_10
		}
	}
	else = {
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_10
			add_idea = WML_idea_currency_reserve_11
		}
	}
}

WML_treasury_funds_del = {
	custom_effect_tooltip = IRIS_Deteriorate_the_economy_situation_tt
	if = {
		limit = {
			has_idea = WML_idea_currency_reserve_11
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_11
			add_idea = WML_idea_currency_reserve_10
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_10
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_10
			add_idea = WML_idea_currency_reserve_9
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_9
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_9
			add_idea = WML_idea_currency_reserve_8
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_8
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_8
			add_idea = WML_idea_currency_reserve_7
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_7
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_7
			add_idea = WML_idea_currency_reserve_6
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_6
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_6
			add_idea = WML_idea_currency_reserve_5
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_5
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_5
			add_idea = WML_idea_currency_reserve_4
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_4
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_4
			add_idea = WML_idea_currency_reserve_3
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_3
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_3
			add_idea = WML_idea_currency_reserve_2
		}
	}
	else_if = {
		limit = {
			has_idea = WML_idea_currency_reserve_2
		}
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_2
			add_idea = WML_idea_currency_reserve_1
		}
	}
	else = {
		swap_ideas = {
			remove_idea = WML_idea_currency_reserve_1
			add_idea = WML_idea_currency_reserve_0
		}
	}
}

#刷新地区势力
WML_refresh_regional_power = {
	# set_variable = { ROOT.regional_error_calculation = 1 }
	# add_to_variable = { ROOT.regional_error_calculation = ROOT.modifier@wml_gangster_investigation_error }
	# random_list = {
	# 	#地区判定误差 默认50%误差
	# 	2 = {
	# 		#啥也不做
	# 	}
	# 	ROOT.regional_error_calculation = {#偏差 1
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 3
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 2
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = -1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 4
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 1
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = -1 }
	# 			}
	# 		}
	# 	}
	# 	ROOT.regional_error_calculation = {#偏差 2
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 3
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 2
	# 					}
	# 				}
	# 				set_variable = { this.mini_gang = this.gang_var }
	# 				add_to_variable = { this.mini_gang = -1 }
	# 			}
	# 		}
	# 		random_list = {
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var < 4
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = 1 }
	# 			}
	# 			1 = {
	# 				modifier = {
	# 					factor = 0
	# 					check_variable = {
	# 						this.gang_var > 1
	# 					}
	# 				}
	# 				set_variable = { this.max_gang = this.gang_var }
	# 				add_to_variable = { this.max_gang = -1 }
	# 			}
	# 		}
	# 	}
	# }
}

#刷新支持率GUI
WML_refresh_support_rate = {
	#绘制进度条
	#2号
	set_variable = { WML_progress_bar_profile_picture_2_var_frame = WML_progress_bar_profile_picture_2_var }
	add_to_variable = { WML_progress_bar_profile_picture_2_var_frame = WML_progress_bar_profile_picture_1_var }
	#3号
	set_variable = { WML_progress_bar_profile_picture_3_var_frame = WML_progress_bar_profile_picture_2_var_frame }
	add_to_variable = { WML_progress_bar_profile_picture_3_var_frame = WML_progress_bar_profile_picture_3_var }

	#计算胜利者
	set_variable = { WML_refresh_support_rate_winner = 1 }
	set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_1_var }
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_2_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 2 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_2_var }
	}
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_3_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 3 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_3_var }
	}
	if = {
		limit = { check_variable = { WML_progress_bar_profile_picture_4_var > WML_refresh_support_rate_max } }
		set_variable = { WML_refresh_support_rate_winner = 4 }
		set_variable = { WML_refresh_support_rate_max = WML_progress_bar_profile_picture_4_var }
	}
}


#调整腐败度
colony_adjust_degree_corruption = {
	custom_effect_tooltip = colony_adjust_degree_corruption_tt
	add_to_variable = { this.corrupt = temp_corrupt }
}

#调整黑帮影响
colony_adjust_influence_mafia = {
	custom_effect_tooltip = colony_adjust_influence_mafia_tt
	set_temp_variable = { temp_gang_influence_var_100 = temp_gang_influence_var }
	multiply_temp_variable = { temp_gang_influence_var_100 = 100 }
	add_to_variable = { this.gang_influence_var = temp_gang_influence_var_100 }
	colony_adjustment_gang_level_scale = yes #黑帮等级规模调整检测
	count_colony_regional_gang_influence_modifier = yes #计算地区黑帮势力
}

#计算地区黑帮势力
count_colony_regional_gang_influence_modifier = {
	#街角鬣狗 (正面)
	if = {
		limit = { check_variable = { this.gang_var = 1 } }
		set_temp_variable = { colony_regional_gang_influence_modifier_temp = 100 }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_influence_var }

		set_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_local_supplies = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = colony_regional_gang_influence_modifier_temp }


		divide_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = 337.5 }
		divide_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = 450 }
		divide_variable = { this.colony_regional_gang_influence_modifier_local_supplies = 675 }
	}
	else = {

		set_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_var }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = 2 }
		multiply_temp_variable = { colony_regional_gang_influence_modifier_temp = -100 }
		subtract_from_temp_variable = { colony_regional_gang_influence_modifier_temp = this.gang_influence_var }

		set_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_local_supplies = colony_regional_gang_influence_modifier_temp }
		set_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = colony_regional_gang_influence_modifier_temp }

		divide_variable = { this.colony_regional_gang_influence_modifier_local_building_slots_factor = 450 }
		divide_variable = { this.colony_regional_gang_influence_modifier_state_production_speed_buildings_factor = 500 }
		divide_variable = { this.colony_regional_gang_influence_modifier_local_supplies = 900 }
	}
}

#黑帮等级规模调整检测
colony_adjustment_gang_level_scale = {
	#减少
	if = {
		limit = { check_variable = { this.gang_influence_var < 0 } }
		if = {
			limit = { check_variable = { this.gang_var > 1 } }
			add_to_variable = { this.gang_var = -1 }
			set_variable = { this.colony_adjustment_gang_level_scale_var = this.gang_influence_var }
			set_variable = { this.gang_influence_var = 100 }
			add_to_variable = { this.gang_influence_var = this.colony_adjustment_gang_level_scale_var }
		}
		else = {
			set_variable = { this.gang_influence_var = 0 }
		}
	}
	#增加
	if = {
		limit = { check_variable = { this.gang_influence_var > 100 } }
		if = {
			limit = { check_variable = { this.gang_var < 4 } }
			add_to_variable = { this.gang_var = 1 }
			add_to_variable = { this.gang_influence_var = -100 }
		}
		else = {
			set_variable = { this.gang_influence_var = 100 }
		}
	}
}



#所有政策的所需时间
WML_required_time_for_all_policies = {
	set_variable = { colony_policy_days_0 = 14 }
	set_variable = { colony_policy_days_1 = 21 }
}

#地区政策点击
WML_policy_btn_click_0 = {
	set_temp_variable = { temp_corrupt = -0.05 }
	colony_adjust_degree_corruption = yes
}
WML_policy_btn_click_1 = {
	set_temp_variable = { temp_gang_influence_var = -0.05 }
	colony_adjust_influence_mafia = yes
}

#每日刷新
WML_daily_refres = {
	#地区政策刷新
	371 = {
		WML_regional_policy_refresh = yes
	}
	887 = {
		WML_regional_policy_refresh = yes
	}
	888 = {
		WML_regional_policy_refresh = yes
	}
	340 = {
		WML_regional_policy_refresh = yes
	}
	348 = {
		WML_regional_policy_refresh = yes
	}
	374 = {
		WML_regional_policy_refresh = yes
	}
	890 = {
		WML_regional_policy_refresh = yes
	}
	889 = {
		WML_regional_policy_refresh = yes
	}
}
#地区政策刷新
WML_regional_policy_refresh = {
	if = {
		limit = { has_state_flag = state_perform_policy_flag }
		add_to_variable = { this.policy_days_remaining = 1 }
		set_variable = { this.policy_days_remaining_percentage = this.policy_days_remaining } #进度条
		divide_variable = { this.policy_days_remaining_percentage = this.policy_days }
		multiply_variable = { this.policy_days_remaining_percentage = 100 }
		set_variable = { this.policy_days_remaining_2 = this.policy_days }
		subtract_from_variable = { this.policy_days_remaining_2 = this.policy_days_remaining }

		if = {
			limit = { check_variable = { this.policy_days_remaining = this.policy_days } }
			clr_state_flag = state_perform_policy_flag
			set_variable = { this.policy_days_remaining_percentage = 0 } #进度条归零
			if = {
				limit = {
					owner = {
						or = {
							tag = WML
							tag = EML
						}
					}
				}
				meta_effect = {
					text = {
						WML_policy_btn_click_[V] = yes
					}
					V = "[?this.implement_policies]"
				}
			}
		}
	}
	else = {
		set_variable = { this.policy_days_remaining_percentage = 0 } #进度条归零
		clear_array = this.policy_frame_array #清除判定第几帧数组
		for_loop_effect = {
			end = ROOT.policy_array^num
			add_to_array = { this.policy_frame_array = 2 }
		}
	}
	count_colony_regional_gang_influence_modifier = yes #计算地区黑帮势力
}